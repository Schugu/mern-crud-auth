// Carpetas
//  Src 
//    Routes : Nos servirá para crear las URL del BackEnd (definicion de endpoints o rutas
//             que el FrontEnd pueda pedir).
//    Controllers : Aquí se almacenarán las funciones que se van a ejecutar cuando visitemos
//                  una URL.
//    Models : Nos vaa a servir para guardar los modelos de datos de nuestra base de datos, 
//             Aquí vamos a estar creando esquemas.  
//    Middlewares : Nos va a servir para proteger rutas, para usuarios autentificados.  
//    Schemas : Nos va a serivr para validar datos.
//    Libs : Nos va a servir para escribir codigo que podamos importar varias veces.

// Archivos
//    app.js : Configuracion del código de express del BackEnd.
//    db.js : Base de datos
//    config.js : Nos va a servir para crear configuraciones que el resto de archivos va a pdoer importar.
//    index.js : Aplicacion de arranque.
      ./models/user.model.js : Sirve para especificarle a MongoDB los datos que estaremos guardando, su forma.
      ./routes/auth.routes.js : Sirve para englobar todas las rutas relacionadas con la autentificación.
      ./controllers/auth.controller.js : va a estar relacionado con ./routes/auth.routes.js
      ./libs/jwt.js : Crea un JSON Web Token
      ./middlewares/validateToken.js : funcion para validar si el usuario ya se autentifico o si puso su correo y su contraseña.
      ./controllers/tasks.controllers.js : funciones para el tasks.routes.js
      ./models/task.model.js : modelo de tareas
      ./schemas/auth.schemas.js : esquema para la autentificación.
      ./middlewares/validator.Middleware.js : validar con schemas
      ./schemas/task.schema.js : esquema para las tasks.


{ Anotaciones Importantes }
  1. Al momento de importar archivos que creamos debemos ponerle la extension. Ej(.js). 
    Si estamos importando modulos de tercernos no hace falta ponerle la extension. 
  2. Para no mezclar las rutas del Frontend y del Backend, /api a las rutas del Backend 
    en app.js.
  3. Los middlewares son funciones que se ejecutan antes de llegar a una ruta.
  

            // MODULOS // 
{ nodemon }
  Instalar nodemon para no estar apagando y prendiendo el servidor entre modificaciones.

  Para configurar el comando de incicio agregar ( "dev" : "nodemon src/index.js" ) al package.json
  Para iniciar iniciar la aplicacion escribir 'npm run dev'.

{ morgan }
  Sirve para ver las peticiones que van llegando al BackEnd en la consola.

{ mongoose }
  Nos sirve para conectarnos a la base de datos MongoDB y tambien modelar los datos.

{ dotenv } 
  Sirve para importar variables de entorno de un archivo .env ahi puse los datos de MongoDB
  Este modulo no lo utilizan en el video pero como uso MongoDB Atlas lo necesito.

{ bcryptjs }
  Sirve para encriptar las contraseñas 

{ jsonWebToken }
  Sirve para crear un token de sesion asi por ejemplo cuando nos logueemos y reiniciemos 
  la pagina estermos todavia conectados.

{ cookie-parser }
  Nos permite añadir un middleware que convierte una cookie en un objeto JSON.

{ zod }
  Nos permite validar datos comparandolos con un esquema.









